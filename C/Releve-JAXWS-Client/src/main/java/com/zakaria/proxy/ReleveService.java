
package com.zakaria.proxy;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ReleveService", targetNamespace = "http://ws.zakaria.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ReleveService {


    /**
     * 
     * @param rib
     * @return
     *     returns com.zakaria.proxy.Releve
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReleve", targetNamespace = "http://ws.zakaria.com/", className = "com.zakaria.proxy.GetReleve")
    @ResponseWrapper(localName = "getReleveResponse", targetNamespace = "http://ws.zakaria.com/", className = "com.zakaria.proxy.GetReleveResponse")
    @Action(input = "http://ws.zakaria.com/ReleveService/getReleveRequest", output = "http://ws.zakaria.com/ReleveService/getReleveResponse")
    public Releve getReleve(
        @WebParam(name = "RIB", targetNamespace = "")
        Long rib);

}
